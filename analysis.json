{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`etools-currency-amount-input`\n\nA paper-input element that allows only currency amount values (US format). It accepts only digits, comma, a\na single floating point (period), and allows 2 decimals. The maximum number you can have 12 digits until\nfloating point.\nThe value displayed it's paper-input's internal value. The `value` property of this element will update and format\nthe internal value and when internal value is changed, element's value will be updated with current float value.\n\n### Usage\n```html\n<etools-currency-amount-input label=\"Amount value\"\nvalue=\"{{value}}\" currency=\"$\"></etools-currency-amount-input>\n```\n\n### Style\n\nUse CSS properties and mixin of paper-input to style the element or:\n\n`--etools-currency-input` | Mixin applied to currency element | `{}`",
      "summary": "",
      "path": "etools-currency-amount-input.js",
      "properties": [
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "noLabelFloat",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_internalValue",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "placeholder",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autoValidate",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "errorMessage",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "currency",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_currentKeyPressed",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_charsLimit",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 118,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "noOfDecimals",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "addCurrencyAmountDelimiter",
          "description": "Format value as currency amount. Delimited used ', '",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/etools-currency-mixin.js",
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 14,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "EtoolsCurrency"
        },
        {
          "name": "displayCurrencyAmount",
          "description": "Format value as currency amount and return it to be displayed\nUse this to display readonly currency amounts on interface",
          "privacy": "public",
          "sourceRange": {
            "file": "mixins/etools-currency-mixin.js",
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "placeholder"
            },
            {
              "name": "noOfDecimals"
            }
          ],
          "inheritedFrom": "EtoolsCurrency"
        },
        {
          "name": "valueChanged",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail"
            },
            {
              "name": "key"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeAutovalidate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoValidate"
            },
            {
              "name": "readonly"
            }
          ]
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 169,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getStrValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_onValueChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_restoreDamagedInternalValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 215,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getInputElement",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onInternalValueChange",
          "description": "Internal value changed, needs to be checked and changed to US currency format",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 278,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setExternalValue",
          "description": "Update element value with the float value of _internalValue",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 2
            },
            "end": {
              "line": 308,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "preserveFloatingPoint"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_formatValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 2
            },
            "end": {
              "line": 315,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_getCaretPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 2
            },
            "end": {
              "line": 326,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "oField"
            }
          ]
        },
        {
          "name": "_getUpdatedCursorPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 2
            },
            "end": {
              "line": 344,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            },
            {
              "name": "cursorPos"
            }
          ]
        },
        {
          "name": "_updateElementInternalValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 2
            },
            "end": {
              "line": 366,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_applyCurrencyAmountFormat",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 2
            },
            "end": {
              "line": 385,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_getValueWithoutFormat",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 2
            },
            "end": {
              "line": 410,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "decimalsNr"
            },
            {
              "name": "needsStrValue"
            }
          ]
        },
        {
          "name": "_emptyValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 2
            },
            "end": {
              "line": 418,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_getRealNumberValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 2
            },
            "end": {
              "line": 436,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "decimals"
            }
          ]
        },
        {
          "name": "_onKeyDown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 438,
              "column": 2
            },
            "end": {
              "line": 454,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onBlur",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 456,
              "column": 2
            },
            "end": {
              "line": 475,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 477,
              "column": 2
            },
            "end": {
              "line": 479,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 480,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "EtoolsCurrencyAmountInput",
      "attributes": [
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 19
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "no-label-float",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 27
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "placeholder",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "required",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "auto-validate",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "invalid",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "error-message",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "currency",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 22
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "no-of-decimals",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "etools-currency-amount-input",
      "mixins": [
        "EtoolsCurrency"
      ]
    }
  ],
  "mixins": [
    {
      "description": "Currency amount input. US format only.",
      "summary": "",
      "path": "mixins/etools-currency-mixin.js",
      "properties": [],
      "methods": [
        {
          "name": "addCurrencyAmountDelimiter",
          "description": "Format value as currency amount. Delimited used ', '",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 14,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "displayCurrencyAmount",
          "description": "Format value as currency amount and return it to be displayed\nUse this to display readonly currency amounts on interface",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "placeholder"
            },
            {
              "name": "noOfDecimals"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 8,
          "column": 7
        },
        "end": {
          "line": 23,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "EtoolsCurrency",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ],
  "functions": [
    {
      "name": "addCurrencyAmountDelimiter",
      "description": "Format value as currency amount. Delimited used ', '\n   ",
      "summary": "",
      "sourceRange": {
        "file": "mixins/etools-currency-module.js",
        "start": {
          "line": 3,
          "column": 42
        },
        "end": {
          "line": 12,
          "column": 1
        }
      },
      "privacy": "public",
      "params": []
    },
    {
      "name": "displayCurrencyAmount",
      "description": "Format value as currency amount and return it to be displayed\nUse this to display readonly currency amounts on interface\n   ",
      "summary": "",
      "sourceRange": {
        "file": "mixins/etools-currency-module.js",
        "start": {
          "line": 18,
          "column": 37
        },
        "end": {
          "line": 34,
          "column": 1
        }
      },
      "privacy": "public",
      "params": []
    }
  ]
}
